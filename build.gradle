buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
	}
}

apply plugin: 'forge'

version = "1.11.0"

group= "asc.tabbychat" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "TabbyChat"

minecraft {
    version = "1.7.2-10.12.0.1024"
    assetDir = "eclipse/assets"
}
processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
repositories {
    maven {
        name = "dykam"
        url = "http://nexus.dykam.nl/content/groups/public/"
    }
}
dependencies {
	compile 'com.mumfrey:Liteloader:pb-4'
	compile 'junit:junit:4.8.1'
	compile 'net.sf.jazzy:jazzy:0.5.2-rtext-1.4.1-2'
	compile 'org.lwjgl.lwjgl:lwjgl:2.9.0'
	compile 'org.apache.logging.log4j:log4j-core:2.0-beta9'
	compile 'org.apache.logging.log4j:log4j-api:2.0-beta9'
	compile 'org.apache.commons:commons-lang3:3.0'
	compile 'commons-io:commons-io:2.4'
}

//jar { onlyIf { false } } // Don't build default jar.
def output(taskName, aBaseName, anExtension, includeClasses = [], includeResources = []) {
    theTask = tasks.create(name: taskName, dependsOn: classes, type: Jar) {
        if(aBaseName) baseName aBaseName
        if(anExtension) extension anExtension
        from({configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }}) {
            include "com/swabunga/spell/**"
        }
        from(file("$buildDir/classes/main")){
            exclude 'acs/tabbychat/**'
            if(includeClasses) include includeClasses
            exclude 'acs/tabbychat/core/LiteModTabbyChat.class'
            exclude 'acs/tabbychat/core/TabbyChatMod.class'
            exclude 'net/minecraft/**'
        }
        from(file("$buildDir/resources/main")){
            include 'english.0'
            if(includeResources) include includeResources
        }
        classifier 'release'
    }

    artifacts { archives theTask }
    reobf { reobf theTask }

}

output('liteloader', 'TabbyChat-Lite', "litemod", ['acs/tabbychat/core/LiteModTabbyChat.class'], ['litemod.json'])
output('basemod', 'TabbyChat-Basemod', null, ['net/minecraft/**'])
output('forge', 'TabbyChat-Forge', null, ['acs/tabbychat/core/TabbyChatMod.class'], ['mcmod.info'])
